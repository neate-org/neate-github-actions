name: CD Template

on:
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      GIT_REPO_API_TOKEN:
        required: true
      PRIVATE_REPO_TOKEN:
        required: true
    inputs:
      charts:
        type: string
        description: "Charts separated by spaces"
        required: false
        default: "dummy"
      images:
        type: string
        description: "Images separated by spaces"
        required: false
        default: "neateas/image-name"
      environment:
        type: string
        description: "Environment"
        required: false
        default: "prod"
      sections:
        type: string
        description: "Dbm sections separated by spaces"
        required: false
        default: "service"
      python_version:
        type: string
        description: "Python version to use"
        required: false
        default: "3.9"
      docker_registry:
        type: string
        description: "Docker registry to use"
        required: false
        default: "docker.io"
      deployment_repo:
        type: string
        description: "Repository for deployment"
        required: false
        default: "neate-org/neate-k8s-deployment"
      slack:
        type: string
        description: 'Slack incoming webhook url'
        required: false
        default: 'dummy'
  workflow_dispatch:
    inputs:
      charts:
        description: "Charts separated by spaces"
        required: false
        default: "dummy"
      images:
        description: "Images separated by spaces"
        required: false
        default: "neateas/image-name"
      environment:
        description: "Environment"
        required: false
        default: "prod"
      sections:
        description: "Dbm sections separated by spaces"
        required: false
        default: "service"
      python_version:
        description: "Python version to use"
        required: false
        default: "3.9"
      docker_registry:
        description: "Docker registry to use"
        required: false
        default: "docker.io"
      deployment_repo:
        description: "Repository for deployment"
        required: false
        default: "neate-org/neate-k8s-deployment"
      slack:
        description: 'Slack incoming webhook url'
        required: false
        default: 'dummy'

permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python_version }}

      - name: setup Docker
        uses: docker/setup-docker-action@v4

      - name: install kubectl
        uses: azure/setup-kubectl@v3

      - name: install helm
        uses: azure/setup-helm@v3

      - name: login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: FranzDiebold/github-env-vars-action@v2

      - name: Set image tag
        shell: bash
        run: |
          if [[ "$CI_ACTION_REF_NAME_SLUG" == "master" || "$CI_ACTION_REF_NAME_SLUG" == "main" ]] ; then 
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          else 
            echo "IMAGE_TAG=$CI_ACTION_REF_NAME_SLUG" >> $GITHUB_ENV
          fi

      - name: Install requirements
        shell: bash
        run: |
          pip install DockerBuildManagement

      - name: Publish
        shell: bash
        run: |
          dbm -build -publish ${{ inputs.sections }}

      - name: Deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GIT_REPO_API_TOKEN }}
          script: |
            const [owner, repo] = '${{ inputs.deployment_repo }}'.split('/');
            github.rest.actions.createWorkflowDispatch({
              owner: owner,
              repo: repo,
              workflow_id: 'cd.yml',
              ref: 'master',
              inputs: {
                charts: '${{ inputs.charts }}',
                images: '${{ inputs.images }}:'+process.env.IMAGE_TAG,
                environment: '${{ inputs.environment }}',
                slack: '${{ inputs.slack }}',
              },
            })
